#include "AVLtree.h"

int main(int argc, char** argv) {

    Tree a(32), b(32), c(32), d(32), e(32); 
    std::cout << "===================\nA:\n" << a 
        << "===================\nB:\n" << b 
        << "===================\nC:\n" << c
        << "===================\nD:\n" << d;
    e = a|(b&c)/d;
    std::cout << "===================\nE:\n" << e ;
    
    std::cout << "==============================================\n" <<
                "merge:\n";    
    Tree f({0,1,2,3,4,5,6,7,8,9}), g({1,1,1,2,2,2,3,3,3}); 

    std::cout  >> f >> g;
    f.merge(g);
    std::cout <<"==> ">> f;

    std::cout << "==============================================\n" <<
                "subst:\n";    
    Tree h({0,1,2,3,4,5,6,7,8,9}), k({4,3,2,1});
    std::cout  >> h >> k;
    h.subst(k, 5);
    std::cout << "==> " >> h;
    
    std::cout << "==============================================\n" <<
                "change:\n";    
    Tree m({0,1,2,3,4,5,6,7,8,9}), n({4,3,2,1});
    std::cout  >> m >> n;
    m.change(n, 5);
    std::cout << "==> " >> m;
    
    return 0;
 
}

